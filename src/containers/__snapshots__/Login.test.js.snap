// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login should match snapshot upon render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    handleSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          className="login-form"
          onSubmit={[Function]}
>
          <input
                    className="username"
                    name="email"
                    onChange={[Function]}
                    placeholder="email"
                    type="email"
                    value=""
          />
          <input
                    className="password"
                    name="password"
                    onChange={[Function]}
                    placeholder="password"
                    type="password"
                    value=""
          />
          <button
                    className="submit-button"
          >
                    Log in
          </button>
</form>,
        <div
          className="create-account-div"
>
          <p
                    className="error-message"
          />
          <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="create-account"
                    to="/createAccount"
          >
                    or Create Account
          </NavLink>
</div>,
      ],
      "className": "login",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="username"
              name="email"
              onChange={[Function]}
              placeholder="email"
              type="email"
              value=""
/>,
            <input
              className="password"
              name="password"
              onChange={[Function]}
              placeholder="password"
              type="password"
              value=""
/>,
            <button
              className="submit-button"
>
              Log in
</button>,
          ],
          "className": "login-form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "username",
              "name": "email",
              "onChange": [Function],
              "placeholder": "email",
              "type": "email",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "password",
              "name": "password",
              "onChange": [Function],
              "placeholder": "password",
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Log in",
              "className": "submit-button",
            },
            "ref": null,
            "rendered": "Log in",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="error-message"
/>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="create-account"
              to="/createAccount"
>
              or Create Account
</NavLink>,
          ],
          "className": "create-account-div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "className": "error-message",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "or Create Account",
              "className": "create-account",
              "to": "/createAccount",
            },
            "ref": null,
            "rendered": "or Create Account",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="login-form"
            onSubmit={[Function]}
>
            <input
                        className="username"
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="email"
                        value=""
            />
            <input
                        className="password"
                        name="password"
                        onChange={[Function]}
                        placeholder="password"
                        type="password"
                        value=""
            />
            <button
                        className="submit-button"
            >
                        Log in
            </button>
</form>,
          <div
            className="create-account-div"
>
            <p
                        className="error-message"
            />
            <NavLink
                        activeClassName="active"
                        aria-current="page"
                        className="create-account"
                        to="/createAccount"
            >
                        or Create Account
            </NavLink>
</div>,
        ],
        "className": "login",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="username"
                name="email"
                onChange={[Function]}
                placeholder="email"
                type="email"
                value=""
/>,
              <input
                className="password"
                name="password"
                onChange={[Function]}
                placeholder="password"
                type="password"
                value=""
/>,
              <button
                className="submit-button"
>
                Log in
</button>,
            ],
            "className": "login-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "username",
                "name": "email",
                "onChange": [Function],
                "placeholder": "email",
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "password",
                "name": "password",
                "onChange": [Function],
                "placeholder": "password",
                "type": "password",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Log in",
                "className": "submit-button",
              },
              "ref": null,
              "rendered": "Log in",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="error-message"
/>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="create-account"
                to="/createAccount"
>
                or Create Account
</NavLink>,
            ],
            "className": "create-account-div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "className": "error-message",
              },
              "ref": null,
              "rendered": "",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "or Create Account",
                "className": "create-account",
                "to": "/createAccount",
              },
              "ref": null,
              "rendered": "or Create Account",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
